i=0
repeat
	mon = peripheral.find("monitor")
	if not mon then
		i = i+1
		print("Checking monitor availabilty every second | "..tostring(20-i).."seconds left before exiting")
		print("Please ensure you have plugged one in !")
		sleep(1)
		term.clear()
		term.setCursorPos(1,1)
	end
until mon or i==20

function clearScreen()
	mon.setBackgroundColor(colors.black)
	mon.clear()
end

function draw(...)
	--Args for the function : {x,y,color,width,height,text}
	arg = unpack(arg)
	monX, monY = mon.getSize()
	x_ori = arg.x
	y_ori = arg.y
	xmax = x_ori+arg.width
	ymax = y_ori+arg.height
	if arg.x<monX and arg.y<monY and xmax<monX and ymax<monY then
		repeat
			mon.setCursorPos(arg.x, arg.y)
			repeat
				mon.setBackgroundColor(arg.color)
				mon.write(" ")
				arg.x = arg.x+1
			until arg.x==xmax
			arg.y=arg.y+1
			arg.x= x_ori
		until arg.y==ymax
		mon.setCursorPos(x_ori+arg.width/2-string.len(arg.text)/2, y_ori+arg.height/2)
		mon.write(arg.text)
		mon.setCursorPos(x_ori, y_ori)
		arg.x = x_ori
		arg.y = y_ori
	else
		mon.write("Please review your Button dimentions, they exceed monitor size !")
	end
end

function createButton(...)
	--Args for the function : {x,y,color,width,height,text, timed, TA}
	arg = unpack(arg)
	draw(arg)
	while true do
		event, side, touchX, touchY = os.pullEvent()
		if event=="monitor_touch" then
			if tonumber(touchX)>x_ori and tonumber(touchX)<xmax and tonumber(touchY)>y_ori and tonumber(touchY)<ymax then
				if arg.TA and not arg.timed then
					if not active then
						arg.color = colors.green
						draw(arg)
						active = true
					else
						arg.color = colors.red
						draw(arg)
						active = false
					end
				else if not arg.TA then
					arg.color = colors.green
					draw(arg)
					sleep(timed)
					arg.color = colors.red
					draw(arg)
				end
			end
		end
		sleep(0.1)
	end
end
end



clearScreen()
createButton({x=10, y=5, color=colors.red, width=10, height=5, text="Button 1", TA=false, timed=1})
createButton({x=30, y=8, color=colors.orange, width=15, height=7, text="Button 2", timed=true, TA=false})