mon = peripheral.find("monitor")

function drawButton(buttonName)
	monSizeX, monSizeY = mon.getSize()
	xmax = buttonName.x+buttonName.width, ymax = buttonName.y+buttonName.height
	if buttonName.x<monSizeX and buttonName.y<monSizeY and xmax<monSizeX and ymax<monSizeY then
		mon.setCursorPos(buttonName.x,buttonName.y)
		mon.setBckgroundColor(buttonName.color)
		repeat
			repeat
				mon.setBackgroundColor(buttonName.color)
				buttonName.x++
			until buttonName.x==xmax
			mon.setCursorPos(buttonName.x,buttonName.y+1)
		until buttonName.y==ymax
	else
		mon.write("Please review your Button dimentions, they exceed monitor size !")
	end
	mon.setCursorPos(buttonName.x+buttonName.height/2,buttonName.y+string.len(buttonName.text)/2)
	mon.write(buttonName.text)
	checkButton(buttonName)
end

function redraw(buttonName)
	if buttonName.isActivated then
		repeat
			repeat
				mon.setBackgroundColor(buttonName.activeColor)
				buttonName.x++
			until buttonName.x==xmax
			mon.setCursorPos(buttonName.x,buttonName.y+1)
		until buttonName.y==ymax
	else if not buttonName.isActivated then
		repeat
			repeat
				mon.setBackgroundColor(buttonName.Color)
				buttonName.x++
			until buttonName.x==xmax
			mon.setCursorPos(buttonName.x,buttonName.y+1)
		until buttonName.y==ymax
	end
end

function checkButton(buttonName)
	while true do
		event, side, posX, posY = os.pullEvent()
		if event == "monitor_touch"
			if posX>buttonName.x and posX<xmax and posY>buttonName.y and posY<buttonName.ymax then
				if buttonName.toggleAble and not buttonName.isActivated then
					_G[buttonName.OnClickedFunction]()
					buttonName.isActivated = true
					redraw(buttonName)
				else if buttonName.toggleAble and buttonName.isActivated then
					_G[buttonName.OnInactiveFunction]()
					buttonName.isActivated = false
					redraw(buttonName)
				else if not buttonName.toggleAble and activedTime then
					_G[buttonName.OnClickedFunction]()
					buttonName.isActivated = true
					redraw(buttonName)
					sleep(buttonName.activedTime)
					_G[buttonName.OnInactiveFunction]()
					buttonName.isActivated = false
					redraw(buttonName)
				end
			end
		end
	end
end
test = {10, 10, 20, 5, "test", colors.red, colors.green, true, "", hello, bye, false}
--drawButton(buttonName{x, y, width, height, text, color, activeColor, toggleAble, activedTime, OnClickedFunction, OnInactiveFunction, isActivated})
drawButton(test)